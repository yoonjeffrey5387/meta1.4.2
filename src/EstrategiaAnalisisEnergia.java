import java.util.Date;

/**
 * Estrategia concreta para anÃ¡lisis de sensores de energÃ­a
 * Implementa el patrÃ³n Strategy - define algoritmos especÃ­ficos para detectar
 * anomalÃ­as en sensores de consumo energÃ©tico
 */
public class EstrategiaAnalisisEnergia implements EstrategiaAnalisis {
    
    // Umbral de consumo energÃ©tico en kW
    private static final double UMBRAL_ENERGIA = 1000.0;
    
    @Override
    public Alerta analizar(Sensor sensor) {
        // Solo analizar sensores de energÃ­a
        if (!"energia".equals(sensor.getTipo())) {
            return null;
        }
        
        double valor = sensor.getValor();
        Date fechaHora = new Date();
        
        // Verificar alto consumo energÃ©tico
        if (valor > UMBRAL_ENERGIA) {
            return new Alerta(sensor.getId(),
                "ðŸ’¡ ALTO CONSUMO ENERGÃ‰TICO: " + valor + " kW en " + sensor.getUbicacion(),
                NivelAlerta.ADVERTENCIA, fechaHora);
        }
        
        // No hay alerta si el consumo estÃ¡ dentro de rangos normales
        return null;
    }
}
